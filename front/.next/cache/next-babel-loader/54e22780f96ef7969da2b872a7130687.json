{"ast":null,"code":"var _jsxFileName = \"/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommmentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommmentDone) {\n      setCommentText('');\n    }\n  }, [addCommmentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n    console.log(post.id, commentText);\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    onChange: onChangeCommentText,\n    value: commentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","PropTypes","Form","Input","Button","useInput","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommmentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","dispatch","type","data","content","postId","userId","console","log","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC9B,QAAMC,EAAE,GAAGJ,WAAW,CAACK,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAoBR,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACF,IAAhB,CAArC;AACA,QAAM,CAACM,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDZ,QAAQ,CAAC,EAAD,CAAnE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,eAAJ,EAAqB;AACnBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACH,eAAD,CAJM,CAAT;AAMA,QAAMI,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACxCoB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,mBADC;AAEPc,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAEP,WAAV;AAAuBQ,QAAAA,MAAM,EAAEd,IAAI,CAACC,EAApC;AAAwCc,QAAAA,MAAM,EAAEd;AAAhD;AAFC,KAAD,CAAR;AAIAe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACC,EAAjB,EAAqBK,WAArB;AACD,GANkC,EAMhC,CAACA,WAAD,EAAcL,EAAd,CANgC,CAAnC;AAQA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACS,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,QAAQ,EAAEZ,mBAAnC;AAAwD,IAAA,KAAK,EAAED,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACY,MAAAA,QAAQ,EAAE,UAAX;AAAuBE,MAAAA,KAAK,EAAE,CAA9B;AAAiCC,MAAAA,MAAM,EAAE,CAAC,EAA1C;AAA8CC,MAAAA,MAAM,EAAE;AAAtD,KAAf;AAAyE,IAAA,IAAI,EAAC,SAA9E;AAAwF,IAAA,QAAQ,EAAC,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAUD,CA7BD;;AA8BAvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAER,SAAS,CAACgC,MAAV,CAAiBC;AADD,CAAxB;AAGA,eAAe1B,WAAf","sourcesContent":["import React, {useCallback, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Input, Button} from 'antd';\nimport useInput from '../hooks/useInput';\nimport {useSelector} from 'react-redux';\nimport {ADD_COMMENT_REQUEST} from '../reducers/post';\n\nconst CommentForm = ({post}) => {\n  const id = useSelector(state => state.user.me?.id);\n  const {addCommmentDone} = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addCommmentDone) {\n      setCommentText('');\n    }\n  }, [addCommmentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {content: commentText, postId: post.id, userId: id},\n    });\n    console.log(post.id, commentText);\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{position: 'relative', margin: 0}}>\n        <Input.TextArea rows={4} onChange={onChangeCommentText} value={commentText} />\n        <Button style={{position: 'absolute', right: 0, bottom: -40, zIndex: 1}} type=\"primary\" htmlType=\"submit\">\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}