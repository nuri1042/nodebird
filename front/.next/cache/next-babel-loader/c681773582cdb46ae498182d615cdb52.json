{"ast":null,"code":"var _jsxFileName = \"/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Button } from \"antd\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const onChangeComment = useCallback(() => {}, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    onChange: onChangeComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Add Comment\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Form","Input","Button","CommentForm","post","onChangeComment","propTypes","shape","id","number","content","string","User","object","createdAt","Images","arrayOf","Comments","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,eAAe,GAAGP,WAAW,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAnC;AACA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,QAAQ,EAAEO,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CADF;AAQD,CAVD;;AAWAF,WAAW,CAACG,SAAZ,GAAwB;AACtBF,EAAAA,IAAI,EAAEL,SAAS,CAACQ,KAAV,CAAgB;AACpBC,IAAAA,EAAE,EAAET,SAAS,CAACU,MADM;AAEpBC,IAAAA,OAAO,EAAEX,SAAS,CAACY,MAFC;AAGpBC,IAAAA,IAAI,EAAEb,SAAS,CAACc,MAHI;AAIpBC,IAAAA,SAAS,EAAEf,SAAS,CAACc,MAJD;AAKpBE,IAAAA,MAAM,EAAEhB,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACc,MAA5B,CALY;AAMpBI,IAAAA,QAAQ,EAAElB,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACc,MAA5B;AANU,GAAhB,EAOHK;AARmB,CAAxB;AAUA,eAAef,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Button } from \"antd\";\n\nconst CommentForm = ({ post }) => {\n  const onChangeComment = useCallback(() => {}, []);\n  return (\n    <>\n      <Form>\n        <Input.TextArea rows={4} onChange={onChangeComment} />\n        <Button>Add Comment</Button>\n      </Form>\n    </>\n  );\n};\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}