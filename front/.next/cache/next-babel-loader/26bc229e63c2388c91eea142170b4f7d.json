{"ast":null,"code":"import { all, fork, delay, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user'; // 예외적으로 generator 아님\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // call : 동기 함수 호출 (결과를 기다렸다가 다음 실행)\n    // fork : 비동기 함수 호출\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000); // put : dispatch 와 같은 역할, action을 dispatch 한다고 생각\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* signUp() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unFollow() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchFollow), fork(watchUnFollow), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","logInAPI","data","post","logIn","action","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unFollowAPI","unFollow","watchFollow","watchUnFollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, delay, put, takeLatest} from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n} from '../reducers/user';\n\n// 예외적으로 generator 아님\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\nfunction* logIn(action) {\n  try {\n    // call : 동기 함수 호출 (결과를 기다렸다가 다음 실행)\n    // fork : 비동기 함수 호출\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    // put : dispatch 와 같은 역할, action을 dispatch 한다고 생각\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signup');\n}\nfunction* signUp() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unFollowAPI() {\n  return axios.post('/api/unfollow');\n}\nfunction* unFollow() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchFollow), fork(watchUnFollow), fork(watchLogOut), fork(watchSignUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}