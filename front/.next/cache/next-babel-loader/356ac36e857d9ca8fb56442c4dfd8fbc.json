{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"user\"; // Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\n\nvar initialState = {\n  user: {},\n  post: {}\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/reducers/index.js"],"names":["HYDRATE","user","initialState","post","rootReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACnBD,EAAAA,IAAI,EAAE,EADa;AAEnBE,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AAEF;AACE,aAAOL,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\n\nimport user from \"user\";\n\n// Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\nconst initialState = {\n  user: {},\n  post: {},\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return { ...state, ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}