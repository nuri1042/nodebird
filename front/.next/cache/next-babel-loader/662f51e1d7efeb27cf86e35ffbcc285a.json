{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutFailure: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpFailure: null,\n  me: null,\n  singUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInDone: false,\n        logInError: null\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutFailure","signUpLoading","signUpDone","signUpFailure","me","singUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","LOG_IN_SUCCESS","dummyUser","error","isLoggingOut","LOG_OUT_SUCCESS","isLoggedIn"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,YAAY,EAAE,KADY;AACL;AACrBC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,UAAU,EAAE,IAHc;AAI1BC,EAAAA,aAAa,EAAE,KAJW;AAIJ;AACtBC,EAAAA,UAAU,EAAE,KALc;AAM1BC,EAAAA,aAAa,EAAE,IANW;AAO1BC,EAAAA,aAAa,EAAE,KAPW;AAOJ;AACtBC,EAAAA,UAAU,EAAE,KARc;AAS1BC,EAAAA,aAAa,EAAE,IATW;AAU1BC,EAAAA,EAAE,EAAE,IAVsB;AAW1BC,EAAAA,UAAU,EAAE,EAXc;AAY1BC,EAAAA,SAAS,EAAE;AAZe,CAArB;AAeP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,gBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,iBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,iBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,gBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,iBAAiB,GAAG,kBAA1B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;;AACA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEjB,cADD;AAELgB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIF,IAAD,IAAU;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM;;AAMP,MAAMgB,OAAO,GAAG,CAACC,KAAK,GAAGjC,YAAT,EAAuBkC,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKjB,cAAL;AACE,6CACKoB,KADL;AAEEhC,QAAAA,YAAY,EAAE,IAFhB;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEC,QAAAA,UAAU,EAAE;AAJd;;AAMF,SAAKgC,cAAL;AACE,6CACKF,KADL;AAEEhC,QAAAA,YAAY,EAAE,KAFhB;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEQ,QAAAA,EAAE,EAAE0B,SAAS,CAACF,MAAM,CAACL,IAAR;AAJf;;AAMF,SAAKd,cAAL;AACE,6CACKkB,KADL;AAEEhC,QAAAA,YAAY,EAAE,KAFhB;AAGEE,QAAAA,UAAU,EAAE+B,MAAM,CAACG;AAHrB;;AAKF,SAAKrB,eAAL;AACE,6CACKiB,KADL;AAEEK,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKC,eAAL;AACE,6CACKN,KADL;AAEEK,QAAAA,YAAY,EAAE,KAFhB;AAGEE,QAAAA,UAAU,EAAE,KAHd;AAIE9B,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAKQ,eAAL;AACE,6CACKe,KADL;AAEEK,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOL,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["// Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\nexport const initialState = {\n  logInLoading: false, // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false, // 로그아웃 시도중\n  logOutDone: false,\n  logOutFailure: null,\n  signUpLoading: false, // 회원가입 시도중\n  signUpDone: false,\n  signUpFailure: null,\n  me: null,\n  singUpData: {},\n  loginData: {},\n};\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\n\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\n// 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data,\n  };\n};\n\nexport const logoutRequestAction = (data) => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        logInLoading: true,\n        logInDone: false,\n        logInError: null,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data),\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        logInLoading: false,\n        logInError: action.error,\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        isLoggingOut: true,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null,\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        isLoggingOut: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}