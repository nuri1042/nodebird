{"ast":null,"code":"var _jsxFileName = \"/Users/kimnuri/Desktop/Nuri/nodebird/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Card, Popover, Avatara } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      iamges: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(React.Fragment, null, __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    })))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(CommentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/components/PostCard.js"],"names":["React","PropTypes","Button","Card","Popover","Avatara","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostCard","post","me","state","user","id","Images","User","nickname","content","propTypes","shape","number","string","object","createdAt","arrayOf","Comments","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Card, Popover, Avatara } from \"antd\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const id = me?.id;\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages iamges={post.Images} />}\n        actions={[\n          <>\n            <RetweetOutlined key=\"retweet\" />\n            <HeartOutlined key=\"heart\" />\n            <MessageOutlined key=\"comment\" />\n            <Popover\n              key=\"more\"\n              content={\n                <Button.Group>\n                  {id && post.User.id === id ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\">삭제</Button>\n                    </>\n                  ) : (\n                    <Button>신고</Button>\n                  )}\n                </Button.Group>\n              }\n            >\n              <EllipsisOutlined />\n            </Popover>\n          </>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      <CommentForm />\n      <Comments />\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}