{"ast":null,"code":"import { all, fork, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/sagas/post.js"],"names":["all","fork","delay","put","takeLatest","ADD_COMMENT_REQUEST","addPostAPI","data","axios","post","addPost","action","type","ADD_POST_SUCCESS","result","ADD_POST_FAILURE","err","response","addCommentAPI","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddPost","ADD_POST_REQUEST","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AACD,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEC,gBADE;AAERN,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,MAAM;AACN,UAAMJ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEG,gBADE;AAERR,MAAAA,IAAI,EAAES,GAAG,CAACC,QAAJ,CAAaV;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASW,aAAT,CAAuBX,IAAvB,EAA6B;AAC3B,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AACD,UAAUY,UAAV,CAAqBR,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEQ,mBADE;AAERb,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,MAAM;AACN,UAAMJ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAES,mBADE;AAERd,MAAAA,IAAI,EAAES,GAAG,CAACC,QAAJ,CAAaV;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUe,YAAV,GAAyB;AACvB,QAAMlB,UAAU,CAACmB,gBAAD,EAAmBb,OAAnB,CAAhB;AACD;;AACD,UAAUc,eAAV,GAA4B;AAC1B,QAAMpB,UAAU,CAACC,mBAAD,EAAsBc,UAAtB,CAAhB;AACD;;AACD,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMzB,GAAG,CAAC,CAACC,IAAI,CAACqB,YAAD,CAAL,EAAqBrB,IAAI,CAACuB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}