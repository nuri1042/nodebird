{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport produce from 'immer';\nimport shortId from 'shortid'; // Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singUpData: {},\n  loginData: {},\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unFollowLoading: false,\n  unFollowDone: false,\n  unFollowError: null\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  var _ref;\n\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: 'nuri',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [(_ref = {\n      id: shortId.generate()\n    }, _defineProperty(_ref, \"id\", shortId.generate()), _defineProperty(_ref, \"nickname\", 'nora'), _ref), {\n      id: shortId.generate(),\n      nickname: 'cloud'\n    }, {\n      nickname: 'jw'\n    }],\n    Followers: [{\n      nickname: 'nora'\n    }, {\n      nickname: 'cloud'\n    }, {\n      nickname: 'jw'\n    }]\n  });\n}; // 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\n\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.followError = null;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unFollowLoading = true;\n        draft.unFollowDone = false;\n        draft.unFollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unFollowLoading = false;\n        draft.unFollowDone = true;\n        draft.unFollowError = null;\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unFollowLoading = false;\n        draft.unFollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        draft.me = null;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        draft.me = null;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        }); //return{\n        //   ...state,\n        //  me:{\n        //     ...state.me,\n        //       Posts: [{id: action.data}, ...state.me.Posts]\n        //     }\n        // }\n\n        break;\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // return{\n      //   ...state,\n      //   me:{\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v)=> v.id !== action.data),\n      //   }\n      // }\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/reducers/user.js"],"names":["produce","shortId","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","singUpData","loginData","followLoading","followDone","followError","unFollowLoading","unFollowDone","unFollowError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","generate","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","push","error","filter","v","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport shortId from 'shortid';\n\n// Redux 에 initialState를 두면 이것을 다양한 컴포넌트에서 원할 때 사용 가능\nexport const initialState = {\n  logInLoading: false, // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false, // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false, // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false, // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singUpData: {},\n  loginData: {},\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unFollowLoading: false,\n  unFollowDone: false,\n  unFollowError: null,\n};\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = (data) => ({\n  ...data,\n  nickname: 'nuri',\n  id: 1,\n  Posts: [{id: 1}],\n  Followings: [\n    {id: shortId.generate(), id: shortId.generate(), nickname: 'nora'},\n    {id: shortId.generate(), nickname: 'cloud'},\n    {nickname: 'jw'},\n  ],\n  Followers: [{nickname: 'nora'}, {nickname: 'cloud'}, {nickname: 'jw'}],\n});\n\n// 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data,\n  };\n};\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.followError = null;\n        draft.me.Followings.push({id: action.data});\n        break;\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n      case UNFOLLOW_REQUEST:\n        draft.unFollowLoading = true;\n        draft.unFollowDone = false;\n        draft.unFollowError = null;\n        break;\n      case UNFOLLOW_SUCCESS:\n        draft.unFollowLoading = false;\n        draft.unFollowDone = true;\n        draft.unFollowError = null;\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\n        break;\n      case UNFOLLOW_FAILURE:\n        draft.unFollowLoading = false;\n        draft.unFollowError = action.error;\n        break;\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        draft.me = null;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        draft.me = null;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({id: action.data});\n        //return{\n        //   ...state,\n        //  me:{\n        //     ...state.me,\n        //       Posts: [{id: action.data}, ...state.me.Posts]\n        //     }\n        // }\n        break;\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n        break;\n      // return{\n      //   ...state,\n      //   me:{\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v)=> v.id !== action.data),\n      //   }\n      // }\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}