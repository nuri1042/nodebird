{"ast":null,"code":"var _jsxFileName = \"/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeComment] = useInput(\"\");\n  const onSubmitCommentText = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: onSubmitCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    onChange: onChangeComment,\n    value: commentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"\\uC090\\uC57D\"))));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Form","Input","Button","useInput","CommentForm","post","commentText","onChangeComment","onSubmitCommentText","console","log","id","propTypes","shape","number","content","string","User","object","createdAt","Images","arrayOf","Comments","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCJ,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAMK,mBAAmB,GAAGV,WAAW,CAAC,MAAM;AAC5CW,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,EAAjB,EAAqBL,WAArB;AACD,GAFsC,EAEpC,CAACA,WAAD,CAFoC,CAAvC;AAGA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,QAAQ,EAAED,eAFZ;AAGE,IAAA,KAAK,EAAED,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF,CADF;AAcD,CAnBD;;AAoBAF,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,KAAV,CAAgB;AACpBF,IAAAA,EAAE,EAAEZ,SAAS,CAACe,MADM;AAEpBC,IAAAA,OAAO,EAAEhB,SAAS,CAACiB,MAFC;AAGpBC,IAAAA,IAAI,EAAElB,SAAS,CAACmB,MAHI;AAIpBC,IAAAA,SAAS,EAAEpB,SAAS,CAACmB,MAJD;AAKpBE,IAAAA,MAAM,EAAErB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACmB,MAA5B,CALY;AAMpBI,IAAAA,QAAQ,EAAEvB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACmB,MAA5B;AANU,GAAhB,EAOHK;AARmB,CAAxB;AAUA,eAAenB,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({ post }) => {\n  const [commentText, onChangeComment] = useInput(\"\");\n  const onSubmitCommentText = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return (\n    <>\n      <Form onFinish={onSubmitCommentText}>\n        <Form.Item>\n          <Input.TextArea\n            rows={4}\n            onChange={onChangeComment}\n            value={commentText}\n          />\n          <Button type=\"primary\">삐약</Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}