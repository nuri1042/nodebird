{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kimnuri/Desktop/Nuri/nodebird/front/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { loginRequestAction } from \"../reducers/user\";\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var style = useMemo(function () {\n    return {\n      padding: 10\n    };\n  }, []);\n  var onSubmitForm = useCallback(function () {\n    console.log(email, password);\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n  }, [email, password]);\n  return __jsx(Form, {\n    style: style,\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    type: \"email\",\n    label: \"Email\",\n    name: \"userEmail\",\n    htmlFor: \"user-email\",\n    rules: [{\n      required: true,\n      message: \"Please input email\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    htmlFor: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    htmlFor: \"user-password\",\n    rules: [{\n      required: true,\n      message: \"Please input password!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Input.Password, {\n    htmlFor: \"user-password\",\n    type: password,\n    value: password,\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"replace\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\n_s(LoginForm, \"OEUHZXu7P95iB1g1orAIlia9Ato=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/components/LoginForm.js"],"names":["React","useCallback","useMemo","useState","Form","Input","Button","Link","useDispatch","useSelector","useInput","loginRequestAction","LoginForm","dispatch","state","user","logInLoading","email","onChangeEmail","password","onChangePassword","style","padding","onSubmitForm","console","log","required","message"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useInput from \"../hooks/useInput\";\nimport { loginRequestAction } from \"../reducers/user\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const { logInLoading } = useSelector((state) => state.user);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  const style = useMemo(() => ({ padding: 10 }), []);\n\n  const onSubmitForm = useCallback(() => {\n    console.log(email, password);\n    dispatch(loginRequestAction({ email, password }));\n  }, [email, password]);\n\n  return (\n    <Form style={style} onFinish={onSubmitForm}>\n      <Form.Item\n        type=\"email\"\n        label=\"Email\"\n        name=\"userEmail\"\n        htmlFor=\"user-email\"\n        rules={[{ required: true, message: \"Please input email\" }]}\n      >\n        <Input\n          htmlFor=\"user-email\"\n          type=\"email\"\n          value={email}\n          onChange={onChangeEmail}\n        />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        htmlFor=\"user-password\"\n        rules={[{ required: true, message: \"Please input password!\" }]}\n      >\n        <Input.Password\n          htmlFor=\"user-password\"\n          type={password}\n          value={password}\n          onChange={onChangePassword}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a href=\"replace\">\n            <Button>회원가입</Button>\n          </a>\n        </Link>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}