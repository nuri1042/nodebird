{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    singUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; // 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nvar login = function login(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/kimnuri/Desktop/Nuri/nodebird/front/reducers/index.js"],"names":["initialState","user","isLoggedIn","singUpData","loginData","post","mainPosts","changeNickname","data","type","login","rootReducer","state","action","name"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB,C,CAYA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD;;AAMA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACF,IAAD,EAAU;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD;;AAOA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBZ,YAAyB;AAAA,MAAXa,MAAW;;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,iBAAL;AACE,6CACKG,KADL;AAEEE,QAAAA,IAAI,EAAED,MAAM,CAACL;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeG,WAAf","sourcesContent":["const initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    singUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\n// 사용자 입력에 따라 동적으로 action을 생성하는 'action creator'\nconst changeNickname = (data) => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data,\n  };\n};\nconst login = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return {\n        ...state,\n        name: action.data,\n      };\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}